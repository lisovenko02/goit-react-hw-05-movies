{"version":3,"file":"static/js/857.cc206ebb.chunk.js","mappings":"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","sources":["api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = '0dcca7a9470f6755158e1e22608b90db';\n\nexport const fetchMoviesTrending = async () => {\n    const resps = await axios.get('/3/trending/movie/day', {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    });\n    return resps.data;\n};\n\nexport const fetchMoviesBySearch = async(query) => {\n    const resps = await axios.get('/3/search/movie', {\n        params: {\n            api_key: API_KEY,\n            query: query,\n        }\n    });\n    return resps.data;\n};\n\nexport const fetchMovieDetails = async(movieId) => {\n    const resps = await axios.get(`3/movie/${movieId}`,{\n        params: {api_key: API_KEY,}\n    })\n    return resps.data;\n};\n\nexport const fetchMovieCast = async(id) => {\n    const resps = await axios.get(`/3/movie/${id}/credits`,{\n        params: {api_key: API_KEY}\n    }) \n    return resps.data;\n};\n\nexport const fetchMovieReviews = async(id) => {\n    const resps = await axios.get(`/3/movie/${id}/reviews`,{\n        params: {api_key : API_KEY}\n    });\n    return resps.data;\n};","import styled from 'styled-components';     \n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    grid-gap: 20px;\n    margin: 0;\n    padding: 20px 0;\n    background-color: rgb(19, 20, 21);\n    list-style: none;\n`;\n\nexport const ListItem = styled.li`\n    width: 178px;\n    padding: 5px;\n    text-align: center;\n    background-color: #ffd800;\n    border-radius: 4px;\n`;\n\nexport const ListImg = styled.img`\n    width: 170px;\n    height: 255px;\n    object-fit: cover;\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 4px;\n    margin-bottom: 10px;\n`;\n\nexport const Title = styled.h2`\n    font-size: 16px;\n    font-weight: bold;\n    margin: 0;\n    margin-bottom: 10px;\n`;\n\nexport const Text = styled.p`\n    font-size: 16px;\n    margin: 0;\n    margin-bottom: 10px;\n`","import { fetchMovieCast } from \"api\";\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport { List, ListImg, ListItem, Text, Title } from \"./Cast.styled\";\n\nimport placeholderAvatar from 'img/istockphoto-1167753373-612x612.jpg'\n\nexport default function Cast() {\n    const [casts, setCasts] = useState([]);\n    const { movieId } = useParams();\n    \n    useEffect(() => {\n        async function getCast() {\n            try {\n                const castFetch = await fetchMovieCast(movieId);\n                setCasts(castFetch.cast);\n                \n            } catch (error) {\n                console.log(error)\n            }\n        }\n        getCast()\n    }, [movieId])\n\n\n    \n    return (\n        <List>\n            {casts && casts.length > 0 && casts.map(({character, name, profile_path, id}) => (\n             <ListItem key={id}>\n               {<ListImg \n                src={(profile_path !== null) \n                    ? \n                    `https://image.tmdb.org/t/p/original/${profile_path}` \n                    : \n                    placeholderAvatar} \n                alt={name}/>}\n               <Title>{character}</Title>\n               <Text>{name}</Text>     \n            </ListItem>\n            ))}\n        </List>\n    )\n};"],"names":["axios","API_KEY","fetchMoviesTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resps","_context","prev","next","params","api_key","language","sent","abrupt","data","stop","apply","arguments","fetchMoviesBySearch","_ref2","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","concat","_x2","fetchMovieCast","_ref4","_callee4","id","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","ListImg","_templateObject3","Title","_templateObject4","Text","_templateObject5","Cast","_useState","useState","_useState2","_slicedToArray","casts","setCasts","useParams","useEffect","_getCast","castFetch","cast","t0","console","log","getCast","_jsx","children","length","map","character","name","profile_path","_jsxs","src","placeholderAvatar","alt"],"sourceRoot":""}